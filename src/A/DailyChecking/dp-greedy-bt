BT / DP BFS(DFS)

一道题：如果其解空间是 exponential，则需要用 bt;
如果求其最优解/或是否有解 ，可以用dp优化，

DFS类似bt,但是关注点在searching,
DFS强制要求不能重复利用同一个node，但可以反复从左到右searching, （复杂度 depends on how many edges , 其实也是(psuedo) exponential on nodes）
BT一般是从左到右去走;


DP / Greedy;
动态规划和贪心算法都是用来求最优化问题，且二者都必须具有最有子结构。
贪心算法可以解决的问题，动态规划都能解决，可以说，贪心算法是动态规划的一个特例。（也就是说，greedy只需要求解特殊的几个子问题）；


DP 主要是解决重叠子问题 ；通常可以得到最优解， (最优问题)
注意： （divide conquer: 将问题划分为 互不相交的 子问题，递归求解子问题，再将它们的解组合起来，求出原问题的解）
Greedy 通常得不到最优解，但是如果可以得到最优解一定是最快解； （包含最优子结构）

DP 可以记录每一个子问题的解；具备回退功能
Greedy 通常是单向的，只针对遇到的子问题进行（heuristic）的searching，不具备回退功能；

