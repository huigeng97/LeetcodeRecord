序列化／反序列化 二叉树 为例；

有什么限制条件吗？
二叉树的value是什么类型？
这个api谁来使用， 内部的还是public的？
这个api更注重speed还是space?  
我需要多线程吗？


无论你提出的建议是什么， 例如你说你觉得speed更重要， 我可能会说我更期待space. 这样做是避免陷入你最熟悉的套路。  
假设我说， 我更需要序列化之后的空间占用最小。 这时候一般的候选人不会刷到这么深， 开始思考。
如果候选人根本没有办法优化空间， 那我会认为他give up too early.  我希望候选人能安静的思考， 提出几种方案， 哪怕方案不成立。
如果候选人提出过多的方案， 没有问help, 这些方案也不工作， 我就认为候选人沟通有问题， 无法把握好度。


候选人选定方案后， 我希望他能和我沟通， 看看是不是在有限时间内能够写完。
最聪明的人不是能做出最好design的， 而是在有限时间内能给出大家都能接受的solution的人。
候选人可能这时候说太复杂了， 我们简化一下， 简化到他熟悉的， 刷过的coding.

follow up： 我觉得还需要写点java doc啊，unit test, regression test, performance tuning, benchmarking, A/B testing, 等等。


微软、G家对new grads更看重下面几点：
1）思路是不是清楚， 写出的code是背下来的一般就没有一个清晰的推理过程， 背题的人写代码和讨论test case和真明白背后原理或者数学证明的是完全不同的。
2)  到底为什么选择做程序员， 未来的规划是什么， 你有没有想清楚自己如何做才能支持自己的职业规划。
3）面试者能不能自己通过走查代码， 加测试用例自己发现自己的bug, fix的对不对， 能不能保证不引发新的regression bug.